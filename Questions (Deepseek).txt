ğŸ”¹ Basic Queries
1. List all unique customer cities (olist_customers_dataset).

2. Count the number of orders placed in 2017 (olist_orders_dataset).

3. Find the total sales (sum of price) per product category (olist_order_items_dataset + olist_products_dataset).

4. Calculate the percentage of orders with a review score â‰¤ 2 (olist_order_reviews_dataset).

5. Count customers per state (olist_customers_dataset).

ğŸ”¹ Intermediate Queries
6. Calculate the number of orders per month in 2018 (olist_orders_dataset).

7. Find the average number of products per order, grouped by customer city (olist_order_items_dataset + olist_customers_dataset).

8. Calculate the percentage of total revenue contributed by each product category (olist_order_items_dataset + olist_products_dataset).

9. Identify the top 10 most purchased expensive products (price Ã— purchase count) (olist_order_items_dataset + olist_products_dataset).

10. Rank sellers by total revenue (olist_order_items_dataset).

ğŸ”¹ Advanced Queries
11. Calculate the 3-month moving average of sales (olist_orders_dataset + olist_order_items_dataset).

12. Compute cumulative sales per month (olist_orders_dataset + olist_order_items_dataset).

13. Calculate year-over-year (YoY) sales growth (olist_orders_dataset + olist_order_items_dataset).

14. Find the customer retention rate (percentage of customers who made a second purchase within 6 months of their first order) (olist_orders_dataset).

15. Identify the top 3 highest-spending customers per year (olist_customers_dataset + olist_order_items_dataset).

ğŸ”¹ Bonus Challenge Queries
16. Find the average delivery time (in days) per state (olist_orders_dataset + olist_customers_dataset).

17. List product categories with the highest average review scores (olist_products_dataset + olist_order_reviews_dataset).

18. Predict churn: List customers with no orders in the last 6 months (olist_orders_dataset).

19. Calculate the "best-selling day of the week" (e.g., most orders on Sundays) (olist_orders_dataset).

20. Identify sellers with the fastest shipping times but low review scores (olist_orders_dataset + olist_order_reviews_dataset).
